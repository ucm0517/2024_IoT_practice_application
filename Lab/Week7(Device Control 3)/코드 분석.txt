1. 메뉴 시스템
displayMenu(): 현재 선택된 메뉴를 LCD에 표시합니다.
scrollMenu(): 메뉴를 순환합니다. "1. Input PW", "2. Set PW", "3. Change PW", "4. Sound on/off"의 4가지 메뉴가 있으며, BUTTON_DOWN_PIN을 눌러 스크롤할 수 있습니다.
executeMenuOption(): 현재 선택된 메뉴 항목을 실행합니다.
INPUT_PW: 비밀번호를 입력하고 확인합니다.
SET_PW: 초기 비밀번호를 설정합니다.
CHANGE_PW: 기존 비밀번호 확인 후 새로운 비밀번호를 설정합니다.
SOUND_ON_OFF: 부저 사운드를 켜거나 끄는 설정을 전환합니다.

2. 비밀번호 기능
processPasswordInput(char key): 키패드 입력을 받아 비밀번호를 입력합니다.
setPassword(): 입력된 비밀번호를 저장하여 새로운 비밀번호를 설정합니다.
checkPassword(): 입력된 비밀번호가 저장된 비밀번호와 일치하는지 확인합니다. 맞으면 도어락을 열고, 틀리면 경고음이 울리며 3회 틀린 경우 10초 동안 잠금 상태가 됩니다.

3. 부저 및 서보 모터 제어
Change_FREQ(unsigned int freq): 사운드 재생을 위해 부저의 주파수를 변경합니다.
STOP_FREQ(): 부저 소리를 멈춥니다.
PlayCheerfulSound(): 비밀번호가 맞을 때, 짧은 경쾌한 사운드를 재생합니다.
Buzzer_Init(): 부저 초기화 설정을 합니다.
Servo_Init(): 서보 모터를 초기화합니다.
Servo_Open(): 비밀번호가 맞으면 서보 모터를 회전시켜 도어락을 여는 동작을 수행합니다.

4. 키패드 입력 및 디바운싱
debounce(int pin): 버튼 입력 시 디바운싱 처리를 통해 떨림을 방지합니다.
readKeypad(): 키패드에서 눌린 버튼을 읽어 해당 키(숫자 또는 메뉴 이동)를 반환합니다.
5. 메인 루프
main(): GPIO 및 LCD 초기화 후, 버튼 입력을 감지하여 메뉴 스크롤 및 메뉴 기능을 실행하는 무한 루프를 통해 프로그램이 동작합니다.




1. Change_FREQ(unsigned int freq)
로직: 주어진 freq(주파수) 값을 부저로 출력합니다.
설명: 비밀번호 입력, 메뉴 스크롤 등의 이벤트 시 사운드를 재생하기 위해 사용됩니다. soundOn이 1일 때만 동작하여 사운드를 재생합니다.

2. STOP_FREQ()
로직: 부저를 멈추도록 freq를 0으로 설정합니다.
설명: 사운드 재생을 멈추기 위해 호출되는 함수입니다.

3. Buzzer_Init()
로직: 부저를 초기화하고 STOP_FREQ()로 소리를 멈춘 상태로 설정합니다.
설명: 부저를 초기 상태로 설정하는 함수로, 프로그램 시작 시 실행됩니다.

4. Servo_Init()
로직: 서보 모터를 초기화하고, softPwmCreate를 이용해 서보 제어에 필요한 PWM 신호를 생성합니다.
설명: 서보 모터를 초기 상태로 설정하는 함수입니다.

5. Servo_Open()
로직: 서보 모터를 90도로 회전시킨 후, 2초 대기하고 원래 위치로 되돌립니다.
설명: 비밀번호가 올바른 경우 도어락을 여는 동작을 수행합니다.

6. PlayCheerfulSound()
로직: 미리 정의된 음계 배열을 순서대로 재생하여 경쾌한 소리를 만듭니다.
설명: 비밀번호가 올바를 때, 사용자가 듣기에 즐거운 사운드를 재생합니다.

7. debounce(int pin)
로직: 버튼이 실제 눌렸는지 확인하기 위해 50ms 동안 LOW 상태를 유지하는지 검사합니다.
설명: 버튼을 누를 때의 떨림 현상(채터링)을 방지하기 위한 함수로, 버튼 입력의 정확도를 높입니다.

8. readKeypad()
로직: 각 버튼 핀에 대한 입력 상태를 읽어 해당하는 키(0-9, E, D)를 반환합니다.
설명: 키패드에서 눌린 버튼을 읽어오는 함수입니다. debounce() 함수를 사용하여 떨림 방지를 합니다.

9. displayMenu()
로직: currentMenu 값에 따라 LCD에 현재 메뉴 항목을 표시합니다.
설명: 현재 선택된 메뉴를 LCD에 보여주는 함수입니다.

10. scrollMenu()
로직: currentMenu 값을 0~3 범위에서 순환하며 증가시키고, displayMenu()를 호출하여 업데이트합니다.
설명: 메뉴 스크롤 시 사용자가 볼 수 있도록 다음 메뉴를 LCD에 표시합니다.

11. processPasswordInput(char key)
로직: 입력된 숫자 key를 inputPassword 배열에 저장하고, LCD에 '*'로 표시하며 소리를 재생합니다.
설명: 비밀번호 입력 시 각 자리 수 입력을 처리하는 함수로, 입력할 때마다 짧은 소리가 재생됩니다.

12. setPassword()
로직: 입력된 비밀번호를 password 배열에 저장하고, isPasswordSet을 1로 설정하여 비밀번호가 설정되었음을 표시합니다.
설명: 비밀번호를 설정하는 함수로, 비밀번호가 설정되면 LCD에 설정 완료 메시지가 표시됩니다.

13. checkPassword()
로직: inputPassword와 password를 비교하여 일치하면 도어락을 열고, 일치하지 않으면 경고음을 울리며 시도 횟수를 증가시킵니다.
설명: 입력된 비밀번호가 맞는지 확인하여 도어락을 여는지 여부를 결정하는 함수입니다. 틀린 비밀번호를 세 번 입력하면 10초간 잠금 상태로 전환됩니다.

14. executeMenuOption()
로직: currentMenu 값에 따라 각 메뉴 기능을 실행합니다.
INPUT_PW: 비밀번호가 설정된 경우, 입력된 비밀번호를 확인하는 기능을 수행합니다.
SET_PW: 비밀번호가 설정되지 않은 경우, 새 비밀번호를 설정하는 기능을 수행합니다.
CHANGE_PW: 기존 비밀번호 확인 후 새 비밀번호를 설정하는 기능을 수행합니다.
SOUND_ON_OFF: 사운드 기능을 켜거나 끄는 기능을 수행합니다.
설명: 현재 메뉴 옵션을 실행하는 함수로, 선택된 메뉴에 따라 기능이 달라집니다.

15. main()
로직: GPIO 및 LCD 초기화를 수행한 후, 무한 루프에서 버튼 입력을 감지하고 메뉴 스크롤과 메뉴 실행 기능을 처리합니다.
설명: 프로그램의 시작점이자 메인 루프로, 모든 초기 설정을 수행하고 프로그램이 동작하도록 합니다.